@model IEnumerable<Entities.EventBooking>
@{
    string classbadge;
    string date;
    ViewData["Title"] = "NewBookingEventlist";
}

<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>New Event Booking</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="#">Event</a></li>
                        <li class="breadcrumb-item active">New Event Booking</li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>
    <div>
        <div class="card" id="snackbar"></div>
        <div class="card" id="snackbar2"></div>
        <div class="card" id="snackbar3"></div>
    </div>
    <div class="container">
        <br />
        <div class="card">
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead style="background-color:#17a2b8!important;">
                        <tr>
                            <th>
                                <label>Event Name</label>
                               
                            </th>
                            <th>
                                <label>Total Guest</label>
                                
                            </th>
                            <th>
                                <label>Event Date</label>
                                
                            </th>
                            <th>
                                <label>Event Time</label>
                             
                            </th>
                            <th>
                                <label>Created Date</label>

                            </th>
                            <th>
                                <label>Booking Status</label>
                              
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                                    @if (Model == null || !Model.Any())
                            {
                                <tr>
                                    <td colspan="12" style="text-align: center;">
                                    <h3><strong>Oops! Not Data Avalaible.</strong></h3>
                                    </td>
                                </tr>
                            }
                            else
                            {
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                     @Html.DisplayFor(modelItem => item.eventName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TotalGuest)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.eventDate)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.eventTime)
                                </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.BookingDate)
                                    </td>
                                <td class="mailbox-name">

                                        @{

                                            classbadge = "";
                                            if (@item.eventBookingStatus == 0)
                                            {

                                                classbadge = "badge badge-danger";
                                            }
                                            else if (@item.eventBookingStatus == 1)
                                            {

                                                classbadge = "badge badge-info";
                                            }
                                            else
                                            {
                                                classbadge = "badge badge-primary";
                                            }
                                    }
                                    <input type="datetime-local" hidden id="solvetime" />
                                        <select id="msgstatus" class="@classbadge" onchange="UpdateEventStatus('@item.eventBookingId','@item.UserName' ,'@item.UserID','@item.eventID', this.value);" asp-for="@item.eventBookingStatus">
                                            @if (@item.eventBookingStatus == 0)
                                            {
                                                <option value="0">Disapproves</option>
                                                <option value="1">Approved</option>
                                                <option value="3" style="display: none;">Completed</option>
                                            }
                                            else if (@item.eventBookingStatus == 1)
                                            {
                                                <option value="0" style="display: none;">Disapproves</option>
                                                <option value="1">Approved</option>
                                                <option value="3" style="display: none;">Completed</option>
                                            }
                                    </select>
                                </td>
                            </tr>
                        }}
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
    function UpdateEventStatus(Id,name,email,eventid, selectedValue) {
        debugger;
        setTimeout(function () {
            let data = {
                eventBookingId: Id,
                UserName: name,
                UserID: email,
                eventID: eventid,
                eventBookingStatus: selectedValue,
            };

            $.post('/Event/UpdateBookingEventStatus', data)
                .done(function (res) {
                    showinsertsuccess("Status Updated");
                    window.location.href = "/Event/NewBookingEventlist";
                })
                .fail(function () {
                    // Handle the failure case
                    showerror("Failed update");
                });
        }, 1500)

    }

    function showinsertsuccess(msg) {
        var x = document.getElementById("snackbar");
        x.className = "show";
        setTimeout(function () { x.className = x.className.replace("show", ""); }, 3000);
        jQuery("#snackbar").html(msg);
    }
    function showerror(msg) {
        var x = document.getElementById("snackbar3");
        x.className = "show3";
        setTimeout(function () { x.className = x.className.replace("show3", ""); }, 3000);
        jQuery("#snackbar3").html(msg);
    }
</script>